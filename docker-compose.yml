version: '3.5'

services:

  # Meta-Services
  full-stack:
    image: tianon/true
    depends_on: [koan, housten, openvas, zap, database]

  tool-stack:
    image: tianon/true
    depends_on: [openvas, zap, database]
  
  openvas:
    image: tianon/true
    depends_on: gvm-tools

    
  # Services
  koan: 
    container_name: Koan
    build:
      context: ./Koan
    entrypoint: "mitmweb --web-host 0.0.0.0 --set block_global=false"
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.send_redirects=1
    cap_add:
          - ALL
          # - NET_ADMIN
          # - SYS_MODULE
    privileged: true
    restart: always
    environment:
      database: "${database}"
      TOR_CREDS: "${TOR_CREDS}"
      TOR_CRED_HASH: "${TOR_CRED_HASH}"
      # http_proxy: "${koan_http_proxy}"
    
    networks:
      - internal
      - external
    ports:
      - '8083:8081'  


  houston: # Command and control
    container_name: Housten
    build:
      context: ./Houston
    entrypoint: /usr/bin/bash
    tty: true
    restart: always
    depends_on:
      - koan
    environment:
      http_proxy: "${http_proxy}"
      database: "${database}"
    networks:
      - internal


  database: # Data archiving
    container_name: Postgres
    build:
      context: ./Database
    environment:  
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    entrypoint: /Scripts/init.sh 
    tty: true
    restart: always
    depends_on:
      - koan
    volumes:
      - postgres-db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - internal
    user:
      postgres
  
  # Tooling

  ettercap:
    container_name: hack-ettercap
    image: mrecco/ettercap:latest
    command:
    - "-TbqM"
    - "arp"
    - "-oi"
    - "interface_name"
    network_mode: host
    pid: host
    # privileged: true
    cap_add:
    - NET_ADMIN
    - SYS_ADMIN
    stop_grace_period: 3s
    restart: always
    depends_on:
      - koan
    environment:
      # http_proxy: "${http_proxy}"
      database: "${database}"
    networks:
      - external

  zap:
    image: owasp/zap2docker-stable 
    ports: 
      - 8080:8080 
    entrypoint: ["zap.sh", "-daemon", "-host", "0.0.0.0", "-port", "8080"]

  # OpenVAS  

  vulnerability-tests:
    image: greenbone/vulnerability-tests
    environment:
      STORAGE_PATH: /var/lib/openvas/22.04/vt-data/nasl
    volumes:
      - vt_data_vol:/mnt

  notus-data:
    image: greenbone/notus-data
    volumes:
      - notus_data_vol:/mnt

  scap-data:
    image: greenbone/scap-data
    volumes:
      - scap_data_vol:/mnt

  cert-bund-data:
    image: greenbone/cert-bund-data
    volumes:
      - cert_data_vol:/mnt

  dfn-cert-data:
    image: greenbone/dfn-cert-data
    volumes:
      - cert_data_vol:/mnt
    depends_on:
      - cert-bund-data

  data-objects:
    image: greenbone/data-objects
    volumes:
      - data_objects_vol:/mnt

  report-formats:
    image: greenbone/report-formats
    volumes:
      - data_objects_vol:/mnt
    depends_on:
      - data-objects

  gpg-data:
    image: greenbone/gpg-data
    volumes:
      - gpg_data_vol:/mnt

  redis-server:
    image: greenbone/redis-server
    restart: on-failure
    volumes:
      - redis_socket_vol:/run/redis/

  pg-gvm:
    image: greenbone/pg-gvm:stable
    restart: on-failure
    volumes:
      - psql_data_vol:/var/lib/postgresql
      - psql_socket_vol:/var/run/postgresql

  gvmd:
    image: greenbone/gvmd:stable
    restart: on-failure
    volumes:
      - gvmd_data_vol:/var/lib/gvm
      - scap_data_vol:/var/lib/gvm/scap-data/
      - cert_data_vol:/var/lib/gvm/cert-data
      - data_objects_vol:/var/lib/gvm/data-objects/gvmd
      - vt_data_vol:/var/lib/openvas/plugins
      - psql_data_vol:/var/lib/postgresql
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
      - psql_socket_vol:/var/run/postgresql
    depends_on:
      pg-gvm:
        condition: service_started
      scap-data:
        condition: service_completed_successfully
      cert-bund-data:
        condition: service_completed_successfully
      dfn-cert-data:
        condition: service_completed_successfully
      data-objects:
        condition: service_completed_successfully
      report-formats:
        condition: service_completed_successfully

  gsa:
    image: greenbone/gsa:stable
    restart: on-failure
    ports:
      - 9392:80
    volumes:
      - gvmd_socket_vol:/run/gvmd
    depends_on:
      - gvmd

  ospd-openvas:
    image: greenbone/ospd-openvas:stable
    restart: on-failure
    init: true
    hostname: ospd-openvas.local
    cap_add:
      - NET_ADMIN # for capturing packages in promiscuous mode
      - NET_RAW # for raw sockets e.g. used for the boreas alive detection
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    command:
      [
        "ospd-openvas",
        "-f",
        "--config",
        "/etc/gvm/ospd-openvas.conf",
        "--mqtt-broker-address",
        "mqtt-broker",
        "--notus-feed-dir",
        "/var/lib/notus/advisories",
        "-m",
        "666"
      ]
    volumes:
      - gpg_data_vol:/etc/openvas/gnupg
      - vt_data_vol:/var/lib/openvas/plugins
      - notus_data_vol:/var/lib/notus
      - ospd_openvas_socket_vol:/run/ospd
      - redis_socket_vol:/run/redis/
    depends_on:
      redis-server:
        condition: service_started
      gpg-data:
        condition: service_completed_successfully
      vulnerability-tests:
        condition: service_completed_successfully

  mqtt-broker:
    restart: on-failure
    image: greenbone/mqtt-broker
    ports:
      - 1883:1883
    networks:
      default:
        aliases:
          - mqtt-broker
          - broker

  notus-scanner:
    restart: on-failure
    image: greenbone/notus-scanner:stable
    volumes:
      - notus_data_vol:/var/lib/notus
      - gpg_data_vol:/etc/openvas/gnupg
    environment:
      NOTUS_SCANNER_MQTT_BROKER_ADDRESS: mqtt-broker
      NOTUS_SCANNER_PRODUCTS_DIRECTORY: /var/lib/notus/products
    depends_on:
      - mqtt-broker
      - gpg-data
      - vulnerability-tests

  gvm-tools:
    image: greenbone/gvm-tools
    volumes:
      - gvmd_socket_vol:/run/gvmd
      - ospd_openvas_socket_vol:/run/ospd
    depends_on:
      - gvmd
      - ospd-openvas

volumes:
  gpg_data_vol:
  scap_data_vol:
  cert_data_vol:
  data_objects_vol:
  gvmd_data_vol:
  psql_data_vol:
  vt_data_vol:
  notus_data_vol:
  psql_socket_vol:
  gvmd_socket_vol:
  ospd_openvas_socket_vol:
  redis_socket_vol:
  # End of openVAS

  postgres-db:
    driver: local
    driver_opts:
        type: none
        o: bind
        device: ./Database/data

  housten:
    driver: local
    driver_opts:
        type: none
        o: bind
        device: ./Housten/data

networks:
    internal: # Internal network
        driver: bridge
        enable_ipv6: false
        # internal: true
        ipam:
            driver: default
            config:
                - subnet: 172.16.0.0/16
                  gateway: 172.16.0.1
    
    external: # Public facing network
        driver: bridge
        enable_ipv6: false
        driver_opts:
          com.docker.network.bridge.enable_ip_masquerade: "true"
        ipam:
            driver: default
            config:
                - subnet: 173.16.0.0/16
                  gateway: 173.16.0.1
version: '3.5'

services:
  
  mitmprox: 
  
    container_name: mitmproxy
    
    build:
      context: ./Mitm

    entrypoint: "/Scripts/startup.sh"
   
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=0
      - net.ipv4.conf.all.send_redirects=1

    cap_add:
          - NET_ADMIN
          - SYS_MODULE
    
    # environment:
      # http_proxy: "${mitm_http_proxy}"
    
    networks:
      - internal
      - external

    ports:
      - '8083:8081'
    
    
  koan: # Proxy - Network obfuscation
    
    build:
      context: ./Koan
    
    entrypoint: /usr/bin/bash
    
    tty: true
    
    restart: always
    
    depends_on:
      - mitmprox

    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv4.conf.all.send_redirects=1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

    environment:
      TOR_CREDS: "${TOR_CREDS}"
      TOR_CRED_HASH: "${TOR_CRED_HASH}"
      http_proxy: "${http_proxy}"    

    networks:
      - internal
      - external


  houston: # Command and control
    
    build:
      context: ./Houston
    
    entrypoint: /usr/bin/bash
    
    tty: true
    
    restart: always
    
    depends_on:
      - mitmprox
      - koan

    environment:
      http_proxy: "${http_proxy}"

    networks:
      - internal


  database: # Data archiving
    
    image: postgres:latest
    
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    
    entrypoint: /bin/sh
    
    tty: true
    
    restart: always
    
    depends_on:
      - mitmprox
      - koan

    volumes:
      - C:\Users\User\MEGA\Docker\pagodo_and_proxychain\Database\data:/home

    ports:
      - '5432:5432'
    networks:
      - internal

    user:
      postgres

  databaseadmin:  

    image: dpage/pgadmin4
    
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    
    entrypoint: /bin/sh
    
    tty: true
    
    restart: always

    networks:
      - internal
   

networks:
    internal: # Internal network
        
        driver: bridge
        
        enable_ipv6: false
        
        internal: true
        
        ipam:
            driver: default
           
            config:
                - subnet: 172.16.0.0/16
                  gateway: 172.16.0.1
    
    external: # Public facing network
       
        driver: bridge

        enable_ipv6: false
        
        driver_opts:
          com.docker.network.bridge.enable_ip_masquerade: "true"
        
        ipam:
            driver: default
            
            config:
                - subnet: 173.16.0.0/16
                  gateway: 173.16.0.1
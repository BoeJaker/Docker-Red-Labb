# proxychains.conf  VER 4.x
#
#        HTTP, SOCKS4a, SOCKS5 tunneling proxifier with DNS.


# The option below identifies how the ProxyList is treated.
# only one option should be uncommented at time,
# otherwise the last appearing option will be accepted
#
#dynamic_chain
#
# Dynamic - Each connection will be done via chained proxies
# all proxies chained in the order as they appear in the list
# at least one proxy must be online to play in chain
# (dead proxies are skipped)
# otherwise EINTR is returned to the app
#
strict_chain
#
# Strict - Each connection will be done via chained proxies
# all proxies chained in the order as they appear in the list
# all proxies must be online to play in chain
# otherwise EINTR is returned to the app
#
#round_robin_chain
#
# Round Robin - Each connection will be done via chained proxies
# of chain_len length
# all proxies chained in the order as they appear in the list
# at least one proxy must be online to play in chain
# (dead proxies are skipped).
# the start of the current proxy chain is the proxy after the last
# proxy in the previously invoked proxy chain.
# if the end of the proxy chain is reached while looking for proxies
# start at the beginning again.
# otherwise EINTR is returned to the app
# These semantics are not guaranteed in a multithreaded environment.
#
#random_chain
#
# Random - Each connection will be done via random proxy
# (or proxy chain, see  chain_len) from the list.
# this option is good to test your IDS :)

# Make sense only if random_chain or round_robin_chain
#chain_len = 2

# Quiet mode (no output from library)
#quiet_mode

## Proxy DNS requests - no leak for DNS data
# (disable all of the 3 items below to not proxy your DNS requests)

# method 1. this uses the proxychains4 style method to do remote dns:
# a thread is spawned that serves DNS requests and hands down an ip
# assigned from an internal list (via remote_dns_subnet).
# this is the easiest (setup-wise) and fastest method, however on
# systems with buggy libcs and very complex software like webbrowsers
# this might not work and/or cause crashes.
proxy_dns

# method 2. use the old proxyresolv script to proxy DNS requests
# in proxychains 3.1 style. requires `proxyresolv` in $PATH
# plus a dynamically linked `dig` binary.
# this is a lot slower than `proxy_dns`, doesn't support .onion URLs,
# but might be more compatible with complex software like webbrowsers.
#proxy_dns_old

# method 3. use proxychains4-daemon process to serve remote DNS requests.
# this is similar to the threaded `proxy_dns` method, however it requires
# that proxychains4-daemon is already running on the specified address.
# on the plus side it doesn't do malloc/threads so it should be quite
# compatible with complex, async-unsafe software.
# note that if you don't start proxychains4-daemon before using this,
# the process will simply hang.
#proxy_dns_daemon 127.0.0.1:1053

# set the class A subnet number to use for the internal remote DNS mapping
# we use the reserved 224.x.x.x range by default,
# if the proxified app does a DNS request, we will return an IP from that range.
# on further accesses to this ip we will send the saved DNS name to the proxy.
# in case some control-freak app checks the returned ip, and denies to
# connect, you can use another subnet, e.g. 10.x.x.x or 127.x.x.x.
# of course you should make sure that the proxified app does not need
# *real* access to this subnet.
# i.e. dont use the same subnet then in the localnet section
remote_dns_subnet 127
#remote_dns_subnet 10
#remote_dns_subnet 224

# Some timeouts in milliseconds
tcp_read_time_out 15000
tcp_connect_time_out 15000

### Examples for localnet exclusion
## localnet ranges will *not* use a proxy to connect.
## note that localnet works only when plain IP addresses are passed to the app,
## the hostname resolves via /etc/hosts, or proxy_dns is disabled or proxy_dns_old used.

## Exclude connections to 192.168.1.0/24 with port 80
# localnet 192.168.1.0:80/255.255.255.0

## Exclude connections to 192.168.100.0/24
# localnet 192.168.100.0/255.255.255.0

## Exclude connections to ANYwhere with port 80
# localnet 0.0.0.0:80/0.0.0.0
# localnet [::]:80/0

## RFC6890 Loopback address range
## if you enable this, you have to make sure remote_dns_subnet is not 127
## you'll need to enable it if you want to use an application that
## connects to localhost.
# localnet 127.0.0.0/255.0.0.0
# localnet ::1/128

## RFC1918 Private Address Ranges
# localnet 10.0.0.0/255.0.0.0
# localnet 172.16.0.0/255.240.0.0
# localnet 192.168.0.0/255.255.0.0

### Examples for dnat
## Trying to proxy connections to destinations which are dnatted,
## will result in proxying connections to the new given destinations.
## Whenever I connect to 1.1.1.1 on port 1234 actually connect to 1.1.1.2 on port 443
# dnat 1.1.1.1:1234  1.1.1.2:443

## Whenever I connect to 1.1.1.1 on port 443 actually connect to 1.1.1.2 on port 443
## (no need to write :443 again)
# dnat 1.1.1.2:443  1.1.1.2

## No matter what port I connect to on 1.1.1.1 port actually connect to 1.1.1.2 on port 443
# dnat 1.1.1.1  1.1.1.2:443

## Always, instead of connecting to 1.1.1.1, connect to 1.1.1.2
# dnat 1.1.1.1  1.1.1.2

# ProxyList format
#       type  ip  port [user pass]
#       (values separated by 'tab' or 'blank')
#
#       only numeric ipv4 addresses are valid
#
#
#        Examples:
#
#               socks5  192.168.67.78   1080    lamer   secret
#               http    192.168.89.3    8080    justu   hidden
#               socks4  192.168.1.49    1080
#               http    192.168.39.93   8080
#
#
#       proxy types: http, socks4, socks5, raw
#         * raw: The traffic is simply forwarded to the proxy without modification.
#        ( auth types supported: "basic"-http  "user/pass"-socks )
#
[ProxyList]
http 0.0.0.0 8080
socks4 0.0.0.0 9050
# socks5	68.183.219.54	59166
# socks5	98.188.47.150	4145
# socks5	165.22.64.134	59166
# socks5	189.85.112.20	59166
# socks5	212.152.35.114	1080
# socks5	184.181.217.206	4145
# socks5	89.148.195.249	1080
# socks5	128.199.128.10	59166
# socks5	157.230.190.161	59166
# socks5	47.240.226.173	1080
# socks5	70.166.167.38	57728
# socks5	87.98.184.94	59166
# socks5	185.6.9.159	31358
# socks5	128.199.191.150	59166
# socks5	51.255.219.244	59166
# socks5	188.241.45.142	2021
# socks5	173.82.2.236	59166
# socks5	184.170.248.5	4145
# socks5	167.99.15.50	5557
# socks5	72.221.171.135	4145
# socks5	198.199.101.121	19322
# socks5	162.216.18.189	59166
# socks5	190.131.198.77	59166
# socks5	148.251.40.177	59166
# socks5	41.93.33.24	59166
# socks5	202.149.89.67	7999
# socks5	138.197.13.93	59166
# socks5	51.75.64.91	59166
# socks5	200.55.247.3	59166
# socks5	24.249.199.4	4145
# socks5	159.89.49.172	59166
# socks5	139.59.186.196	59166
# socks5	103.16.199.166	59166
# socks5	159.203.78.174	59166
# socks5	152.228.171.118	59166
# socks5	146.59.152.52	59166
# socks5	205.185.117.77	16831
# socks5	192.241.143.216	59166
# socks5	104.236.45.251	31226
# socks5	51.68.125.26	59166
# socks5	168.235.96.170	59166
# socks5	103.196.136.158	59166
# socks5	54.38.242.224	31143
# socks5	192.252.215.5	16137
# socks5	206.189.118.100	59166
# socks5	51.77.192.111	59166
# socks5	85.214.95.77	59166
# socks5	170.187.153.79	6040
# socks5	139.59.193.106	59166
# socks5	164.163.32.3	59166
# socks5	159.89.91.243	59166
# socks5	168.196.160.62	59166
# socks5	47.88.29.57	9664
# socks5	178.62.144.84	59166
# socks5	68.71.249.153	48606
# socks5	104.37.135.145	4145
# socks5	192.111.139.162	4145
# socks5	46.43.93.74	1080
# socks5	176.31.182.123	59166
# socks5	98.178.72.21	10919
# socks5	134.209.44.126	35278
# socks5	91.218.102.187	1080
# socks5	46.101.19.77	59166
# socks5	203.144.189.116	10000
# socks5	163.47.214.157	59166
# socks5	128.199.89.48	59166
# socks5	164.90.140.187	1998
# socks5	72.210.208.101	4145
# socks5	98.170.57.231	4145
# socks5	139.59.113.129	59166
# socks5	68.183.210.1	59166
# socks5	157.245.253.92	59166
# socks5	188.191.164.55	4890
# socks5	88.99.150.167	6086
# socks5	157.90.120.241	59166
# socks5	184.181.217.210	4145
# socks5	167.99.15.50	43371
# socks5	187.157.23.243	59166
# socks5	24.249.199.12	4145
# socks5	184.178.172.25	15291
# socks5	167.172.119.162	59166
# socks5	37.187.133.177	56736
# socks5	185.233.203.123	1080
# socks5	195.168.10.9	49951
# socks5	143.244.151.14	45608
# socks5	199.229.254.129	4145
# socks5	54.38.94.71	27808
# socks5	18.166.116.121	8090
# socks5	98.175.31.195	4145
# socks5	185.201.227.249	59166
# socks5	72.195.114.184	4145
# socks5	95.68.225.138	1080
# socks5	160.119.127.43	59166
# socks5	165.227.187.48	59166
# socks5	143.198.100.226	59166
# socks5	172.104.210.40	59166
# socks5	172.104.158.151	59166
# socks5	217.182.137.240	56524
# socks5	192.241.201.49	59166
# socks5	203.144.189.121	10000